---
import { Profile } from "@interfaces/profile";

const pb = Astro.locals.pb;
const isAdmin = pb.authStore.model.isAdmin;

const { id } = Astro.params;

if (!isAdmin) {
  return Astro.redirect(`/partial/${id}`);
}

const profile = await pb.collection("profiles").getOne<Profile>(id);
const marriages = await pb.collection("mariages").getFullList({
  filter: `husband = '${id}' || wife = '${id}'`,
  expand: "husband, wife",
});

const elders = await pb
  .collection("profiles")
  .getList<Profile>(1, 2, { sort: "birthDate" })
  .then((res) => res.items);

const isElder = elders.some((elder) => elder.id === id);

export const partial = true;
---

<div class="h-full w-[35rem] max-w-[100vw] pt-2 px-2">
  <div class="bg-white shadow-lg rounded-lg p-4 relative">
    <button
      hx-get="/profile/partial"
      hx-target="#profile-card"
      class="absolute top-4 right-4 flex items-center justify-center w-8 h-8 bg-gray-200 hover:bg-gray-300 text-gray-600 hover:text-gray-700 rounded-full focus:outline-none focus:ring-2 focus:ring-gray-400"
    >
      <img src="/icons/cross.svg" alt="cross" class="w-4 h-4" />
    </button>
    <form hx-put=`/api/profile/${id}` hx-target="#profile-card">
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="name">
          Nom
        </label>
        <input
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          id="name"
          name="name"
          type="text"
          placeholder="Nom"
          value={profile.name}
        />
      </div>
      <div class="mb-4">
        <label
          class="block text-gray-700 text-sm font-bold mb-2"
          for="description-editor"
        >
          Description
        </label>
        <div id="description-editor" class="pell"></div>
        <input type="hidden" name="description" value={profile.description} />
      </div>
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="birth">
          Date de naissance <span class="text-gray-400 text-xs font-thin"
            >(format AAAA-MM-JJ ou AAAA-MM ou AAAA)</span
          >
        </label>
        <input
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          id="birth"
          name="birthDate"
          type="text"
          value={profile.birthDate}
        />
        <label class="block text-gray-700 text-sm font-bold mb-2" for="birth">
          Date de mort <span class="text-gray-400 text-xs font-thin"
            >(format AAAA-MM-JJ ou AAAA-MM ou AAAA)</span
          >
        </label>
        <input
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          id="death"
          name="deathDate"
          type="text"
          value={profile.deathDate}
        />
      </div>
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="sex">
          Sexe
        </label>
        <input
          class=""
          id="sex"
          name="sex"
          type="checkbox"
          checked={profile.sex === "M"}
        />
      </div>
      <button
        class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
        type="submit"
      >
        Modifier
      </button>
    </form>
    {
      !marriages.length ? (
        <button
          hx-post={`/api/addMarriage?profileId=${profile.id}`}
          class="bg-transparent hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow"
        >
          Ajouter mariage
        </button>
      ) : (
        <button
          hx-post={`/api/addChild?marriageId=${marriages[0].id}`}
          class="bg-transparent hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow"
        >
          Ajouter enfant
        </button>
      )
    }
    {
      isElder && (
        <button
          hx-post={`/api/addParents?profileId=${profile.id}`}
          class="bg-transparent hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow"
        >
          Ajouter parents
        </button>
      )
    }
    {
      !marriages && (
        <button
          hx-delete={`/api/profile/${profile.id}`}
          class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
        >
          Supprimer
        </button>
      )
    }
  </div>
</div>

<script
  is:inline
  define:vars={{
    id: profile.id,
    personName: profile.name,
    personDescription: profile.description,
  }}
>
  document.title = personName;
  window.history.pushState({}, "", `/tree?profileId=${id}`);
  document
    .getElementById("node-" + id)
    .scrollIntoView({ behavior: "smooth", inline: "center", block: "center" });

  const hiddenInput = document.querySelector("input[name=description]");
  function createEditor() {
    const editor = pell.init({
      element: document.getElementById("description-editor"),
      actions: ["bold", "italic", "heading1", "heading2", "paragraph"],
      onChange: (html) => (hiddenInput.value = html),
    });
    editor.content.innerHTML = personDescription;
  }

  const script = document.createElement("script");
  script.type = "text/javascript";
  script.async = true;
  script.src = "https://unpkg.com/pell";
  document.body.appendChild(script);
  script.addEventListener("load", createEditor);
</script>

<link
  rel="stylesheet"
  type="text/css"
  href="https://unpkg.com/pell/dist/pell.min.css"
/>
