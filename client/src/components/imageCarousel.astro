---
interface Props {
  imageUrls: string[];
}

const { imageUrls } = Astro.props;
---

<div
  class="fixed inset-0 bg-black z-40 bg-opacity-90 flex justify-center items-center p-8"
  x-show="imageCarouselModalOpen"
  x-on:keydown.escape.window="imageCarouselModalOpen = false"
  x-data=`{ currentImage: 0, imageUrls: ${ JSON.stringify(imageUrls) } }`
  x-on:keydown.right.window="currentImage = (currentImage + 1) % imageUrls.length"
  x-on:keydown.left.window="currentImage = (currentImage - 1 + imageUrls.length) % imageUrls.length"
>
  <button
    x-on:click="imageCarouselModalOpen = false"
    class="bg-black hover:bg-gray-800 transition bg-opacity-50 rounded-full size-10 p-1 absolute top-4 right-4"
  >
    <svg fill="white" viewBox="0 0 16 16">
      <path
        d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"
      ></path>
    </svg>
  </button>
  <button
    x-on:click="currentImage = (currentImage - 1 + imageUrls.length) % imageUrls.length"
    class="bg-black hover:bg-gray-800 transition bg-opacity-50 rounded-full size-10 p-2 absolute top-1/2 left-4 -translate-y-1/2"
  >
    <svg fill="white" viewBox="0 0 16 16">
      <path
        d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"
      ></path>
    </svg>
  </button>
  <img
    id="modal-image"
    x-bind:src="imageUrls[currentImage]"
    class="object-contain h-5/6"
  />
  <button
    x-on:click="currentImage = (currentImage + 1) % imageUrls.length"
    class="bg-black hover:bg-gray-800 transition bg-opacity-50 rounded-full size-10 p-2 absolute top-1/2 right-4 -translate-y-1/2"
  >
    <svg fill="white" viewBox="0 0 16 16">
      <path
        d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"
      ></path>
    </svg>
  </button>
  <div class="absolute"></div>
</div>
